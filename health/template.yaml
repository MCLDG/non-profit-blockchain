# Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
 
AWSTemplateFormatVersion: 2010-09-09
Description: Amazon Managed Blockchain. Creates a peer health check Lambda function, and a CW scheduled event that triggers the Lambda. Alarms are published to SNS
Transform: AWS::Serverless-2016-10-31
Metadata:
  LICENSE: Apache License Version 2.0
Parameters:
  NetworkId:
    Description: The network ID of the Amazon Managed Blockchain network you want to execute the health check against
    Type: String
  MemberId:
    Description: The member ID you want to execute the health check against
    Type: String
  NotificationEmail:
    Description: Email address to send notifications to
    Type: String


Resources:
  PeerHealthFunction:
    Type: AWS::Serverless::Function 
    Properties:
      CodeUri: peer-health/
      Handler: app.handler
      Runtime: nodejs8.10
      Role:
        Fn::GetAtt:
        - PeerHealthFunctionRole
        - Arn

  PeerHealthFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - lambda.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      Policies:
      - PolicyName: root
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - managedblockchain:ListNodes
            Resource: "*"
          - Effect: Allow
            Action:
            - logs:*
            Resource: arn:aws:logs:*:*:*

  ScheduledRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: ScheduledRule
      ScheduleExpression: "rate(1 minute)"
      State: ENABLED
      Targets: 
        - 
          Arn: 
            !GetAtt PeerHealthFunction.Arn
          Id: PeerHealthCheckv1
          Input: !Sub |
            {
              "networkId": "${NetworkId}",
              "memberId": "${MemberId}"
            }

  PermissionForEventsToInvokeLambda: 
    Type: AWS::Lambda::Permission
    Properties: 
      FunctionName: !Ref PeerHealthFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: 
        Fn::GetAtt: 
          - ScheduledRule
          - Arn
          
  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      Subscription:
      - Protocol: email
        Endpoint: !Ref NotificationEmail

  Alarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmActions:
        - !Ref AlarmTopic
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref PeerHealthFunction
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: 60
      Statistic: Sum
      Threshold: '1'
      
Outputs:
  ScheduledRule:
    Description: CW Scheduled Rule
    Value: !Ref ScheduledRule

  PeerHealthFunction:
    Description: "Peer Health Lambda Function ARN"
    Value: !GetAtt PeerHealthFunction.Arn

  PeerHealthFunctionIamRole:
    Description: "IAM Role for Peer Health Lambda Function"
    Value: !GetAtt PeerHealthFunctionRole.Arn
